buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "org.grails.plugins:hibernate5:${gormVersion-".RELEASE"}"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.15.1"
        classpath "com.moowork.gradle:gradle-node-plugin:1.2.0"
    }
}

version "0.1"
group "com.hmtmcse"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"asset-pipeline"
apply plugin:"org.grails.grails-gsp"
apply plugin:"com.moowork.node"

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
    maven { url "https://packages.atlassian.com/maven-external/" }
    maven { url "http://central.maven.org/maven2" }
    maven { url "https://raw.github.com/hmtmcse/maven-repository/master" }
}

grails {
    plugins {
        compile project(':grails-swagger')
    }
}

dependencies {

    compile project(':java-http-util')
    compile group: 'com.hmtmcse', name: 'java-crypto-and-auth', version: '1.0'
    
    provided group: 'javax.websocket', name: 'javax.websocket-api', version: '1.1'
    compile group: 'com.atlassian.jira', name: 'jira-rest-java-client-core', version: '5.0.4'
    compile group: 'com.atlassian.fugue', name: 'fugue', version: '2.6.1'
    
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-i18n"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:async"
    compile "org.grails.plugins:scaffolding"
    compile "org.grails.plugins:events"
    compile "org.grails.plugins:hibernate5"
    compile "org.hibernate:hibernate-core:5.1.16.Final"
    compile "org.grails.plugins:gsp"
    console "org.grails:grails-console"
    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.13'
    profile "org.grails.profiles:web"
    runtime "org.glassfish.web:el-impl:2.1.2-b03"
    runtime "com.h2database:h2"
    runtime "org.apache.tomcat:tomcat-jdbc"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:2.15.1"
    testCompile "org.grails:grails-gorm-testing-support"
    testCompile "org.grails.plugins:geb"
    testCompile "org.grails:grails-web-testing-support"
    testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"
}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
    addResources = true
    String springProfilesActive = 'spring.profiles.active'
    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}


node {
    version = '10.14.1'
    yarnVersion = '1.9.4'
    distBaseUrl = 'https://nodejs.org/dist'
    download = true
    workDir = file("${project.projectDir}/node-js/nodejs")
    npmWorkDir = file("${project.projectDir}/node-js/npm")
    yarnWorkDir = file("${project.projectDir}/node-js/yarn")
    nodeModulesDir = file("${project.projectDir}/react-app")
}

task bundle(type: YarnTask, dependsOn: 'yarn') {
    group = 'build'
    description = 'Build the client bundle'
    args = ['run', 'bundle']
}

task webpack(type: YarnTask, dependsOn: 'yarn') {
    group = 'application'
    description = 'Build the client bundle in watch mode'
    args = ['run', 'start']
}

bootRun.dependsOn(['bundle'])


assets {
    minifyJs = false
    minifyCss = false
}
